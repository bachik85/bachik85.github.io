{"version":3,"sources":["components/Button/Button.js","components/Product/Product.js","components/Modal/Modal.js","store/emergeReduser.js","store/productListReduser.js","components/ProductList/ProductList.js","components/FormCart/formErrors.js","components/FormCart/validations.js","store/formValues.js","components/FormCart/index.js","pages/Cart/index.js","pages/Favorites/index.js","pages/Home/index.js","commons/Header.js","App.js","serviceWorker.js","store/index.js","index.js"],"names":["Button","backgroundColor","text","onClick","className","data-testid","style","protoTypes","PropTypes","string","func","defaultProps","Product","id","picUrl","name","color","price","btnCard","favorites","setFavorites","cart","inFavorites","includes","inCart","src","alt","icon","faStar","filter","el","localStorage","setItem","JSON","stringify","faCartPlus","object","array","Modal","closeModal","header","closeButton","actions","e","target","currentTarget","faTimes","selectModal","state","stateModal","selectModalDel","stateModalDel","initialState","selectProductList","products","selectProductFavorites","selectProductCart","parse","getItem","ProductList","connect","dispatch","setStateModal","type","payload","setStateModalDel","setCart","items","delBtnCart","useState","productId","setProductId","delCartHandler","event","stopPropagation","currentID","closest","dataset","modalCard","push","modalCardDel","item","listItems","map","key","data-id","bool","FormErrorsTab","errors","errorsList","Object","keys","isVisible","length","ErrorMessage","visible","styled","div","props","css","validationSchema","Yup","shape","firstname","min","max","required","lastname","age","moreThan","deliveryAddress","phoneNumber","phone","selectFormValues","values","FormCart","formValues","deleteCart","console","log","removeItem","setFormValues","initialValues","MyHeaderForm","onSubmit","resetForm","handleBlur","MyForm","onBlur","MyField","placeholder","MyBtn","Form","h2","Field","button","Cart","listItemsInCart","Favorites","listItemsInFavorite","Home","Header","to","App","getProducts","a","axios","get","data","useEffect","path","exact","Boolean","window","location","hostname","match","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.7b54f37e.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Button.scss';\r\n\r\nconst Button = ({backgroundColor, text, onClick, className}) => {\r\n  return (\r\n    <button data-testid=\"btnTestTemplate\"\r\n            className={className}\r\n            style={{backgroundColor: backgroundColor}}\r\n            onClick={onClick}>{text}</button>\r\n  )\r\n};\r\n\r\nButton.protoTypes = {\r\n  className: PropTypes.string,\r\n  backgroundColor: PropTypes.string,\r\n  text: PropTypes.string,\r\n  onClick: PropTypes.func\r\n}\r\n\r\nButton.defaultProps = {\r\n  className: \"btnForm\",\r\n  backgroundColor: '#B3382C',\r\n  text: 'Button',\r\n  onClick: () => {\r\n  }\r\n}\r\nexport default Button;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Product.scss';\r\nimport Button from '../Button/Button';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faStar, faCartPlus} from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nfunction Product({\r\n                   id,\r\n                   picUrl,\r\n                   name,\r\n                   color,\r\n                   price,\r\n                   btnCard,\r\n                   favorites,\r\n                   setFavorites,\r\n                   cart\r\n                 }) {\r\n\r\n  const inFavorites = favorites.includes(id);\r\n  const inCart = cart.includes(id);\r\n\r\n  const favoriteHandler = () => {\r\n    if (!inFavorites) {\r\n      setFavorites([...favorites, id]);\r\n      localStorage.setItem('favorites', JSON.stringify([...favorites, id]))\r\n    } else {\r\n      setFavorites(favorites.filter(el => el !== id));\r\n      localStorage.setItem('favorites', JSON.stringify(favorites.filter(el => el !== id)))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"product-card\">\r\n      <img className=\"product-img\" src={picUrl} alt=\"Изображение скоро появится на сайте\"/>\r\n      <div className=\"product-header\">\r\n        <div className=\"product-header-name\">{name} </div>\r\n        <FontAwesomeIcon icon={faStar} style={inFavorites && {color: \"gold\"}} onClick={favoriteHandler}/>\r\n      </div>\r\n      <div className=\"product-body\">\r\n        <p className=\"product-body-art\">art:{id}</p>\r\n        <p className=\"product-body-text\">\r\n          <span>Color: {color} </span>\r\n        </p>\r\n      </div>\r\n      <div className=\"product-price\">\r\n        <span>{price}</span>\r\n        {!inCart ? <Button {...btnCard}/> : <FontAwesomeIcon icon={faCartPlus}/>}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nProduct.protoTypes = {\r\n  id: PropTypes.string,\r\n  picUrl: PropTypes.string,\r\n  name: PropTypes.string,\r\n  color: PropTypes.string,\r\n  price: PropTypes.string,\r\n  btnCard: PropTypes.object,\r\n  favorites: PropTypes.array,\r\n  setFavorites: PropTypes.func,\r\n  cart: PropTypes.array\r\n}\r\n\r\nexport default Product;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Modal.scss';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faTimes} from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nconst Modal = ({closeModal, header, closeButton, text, actions}) => {\r\n  return (\r\n    <div className=\"modalContainer\"\r\n         onClick={(e) => (e.target === e.currentTarget ? closeModal() : null)}>\r\n      <div className=\"modalWindow\">\r\n        <div className=\"modalHeader\">\r\n          <div className=\"headerText\">{header}</div>\r\n          <>\r\n            {closeButton &&\r\n            <FontAwesomeIcon\r\n              icon={faTimes}\r\n              onClick={closeModal}/>}\r\n          </>\r\n        </div>\r\n        <div className=\"modalText\">\r\n          {text}\r\n        </div>\r\n        <div className=\"modalFooterText\">\r\n          {actions}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nModal.propTypes = {\r\n  closeModal: PropTypes.func,\r\n  header: PropTypes.string,\r\n  closeButton: PropTypes.bool,\r\n  text: PropTypes.string,\r\n  actions: PropTypes.array\r\n}\r\n\r\nexport default Modal\r\n","const HANDLE_MODAL = 'HANDLE_MODAL';\r\nconst HANDLE_MODAL_DEL = 'HANDLE_MODAL_DEL';\r\n\r\nexport const MODULE_NAME = 'emerge';\r\nexport const selectModal = state => state[MODULE_NAME].stateModal;\r\nexport const selectModalDel = state => state[MODULE_NAME].stateModalDel;\r\n\r\n\r\nconst initialState = {\r\n  stateModal: false,\r\n  stateModalDel: false\r\n}\r\n\r\nexport function reducer (state = initialState, { type, payload}) {\r\n  switch (type) {\r\n    case HANDLE_MODAL:\r\n      return {\r\n        ...state,\r\n        stateModal: payload\r\n      }\r\n    case HANDLE_MODAL_DEL:\r\n      return {\r\n        ...state,\r\n        stateModalDel: payload\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const setStateModal = payload => ({\r\n  type: HANDLE_MODAL,\r\n  payload\r\n});\r\n\r\nexport const setStateModalDel = payload => ({\r\n  type: HANDLE_MODAL_DEL,\r\n  payload\r\n})","import axios from 'axios';\r\n\r\nconst SET_PRODUCTS = 'SET_ITEMS';\r\nconst SET_FAVORITES = 'SET_FAVORITES';\r\nconst SET_CART = 'SET_CART';\r\nconst CLEAR_CART = 'CLEAR_CART';\r\n\r\n\r\nexport const MODULE_NAME = 'productList';\r\nexport const selectProductList = state => state[MODULE_NAME].products;\r\nexport const selectProductFavorites = state => state[MODULE_NAME].favorites;\r\nexport const selectProductCart = state => state[MODULE_NAME].cart;\r\n\r\nconst initialState = {\r\n  products: [],\r\n  favorites: JSON.parse(localStorage.getItem('favorites')) || [],\r\n  cart: JSON.parse(localStorage.getItem('cart')) || []\r\n}\r\n\r\nexport function reducer(state = initialState, {type, payload}) {\r\n  switch (type) {\r\n    case SET_PRODUCTS:\r\n      return {\r\n        ...state,\r\n        products: payload\r\n      }\r\n    case SET_FAVORITES:\r\n      return {\r\n        ...state,\r\n        favorites: [...payload]\r\n      }\r\n    case SET_CART:\r\n      return {\r\n        ...state,\r\n        cart: [...payload]\r\n      }\r\n    case CLEAR_CART:\r\n      return {\r\n        ...state,\r\n        cart: []\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const setProducts = payload => ({\r\n  type: SET_PRODUCTS,\r\n  payload\r\n});\r\n\r\nexport const setFavorites = payload => ({\r\n  type: SET_FAVORITES,\r\n  payload\r\n});\r\n\r\nexport const setCart = payload => ({\r\n  type: SET_CART,\r\n  payload\r\n});\r\n\r\nexport const clearCart = payload => ({\r\n  type: CLEAR_CART,\r\n  payload\r\n});\r\n\r\nexport const getProducts = () => async dispatch => {\r\n  try {\r\n    const {data} = await axios.get('GUNS_DATA.json');\r\n    dispatch(setProducts(data))\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport const deleteCart = () => dispatch => {\r\n  dispatch(clearCart());\r\n  console.log('ЗАКАЗАНЫЕ ТОВАРЫ:', localStorage.getItem('cart'));\r\n  localStorage.removeItem('cart');\r\n}\r\n\r\n","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './ProductList.scss';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faTimes} from '@fortawesome/free-solid-svg-icons';\r\nimport {connect} from 'react-redux';\r\n\r\nimport Product from '../Product/Product';\r\nimport Modal from '../Modal/Modal';\r\nimport Button from '../Button/Button';\r\n\r\nimport {selectModal, selectModalDel, setStateModal, setStateModalDel} from '../../store/emergeReduser';\r\nimport {selectProductCart, selectProductFavorites, setCart, setFavorites} from '../../store/productListReduser';\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  stateModal: selectModal(state),\r\n  stateModalDel: selectModalDel(state),\r\n  favorites: selectProductFavorites(state),\r\n  cart: selectProductCart(state)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setStateModal: stateModal => dispatch(setStateModal(stateModal)),\r\n  setStateModalDel: stateModalDel => dispatch(setStateModalDel(stateModalDel)),\r\n  setCart: cart => dispatch(setCart(cart)),\r\n  setFavorites: favorites => dispatch(setFavorites(favorites))\r\n});\r\n\r\nconst ProductList = connect(mapStateToProps, mapDispatchToProps)(({items, favorites, setFavorites, cart, setCart, delBtnCart, stateModal, setStateModal, stateModalDel, setStateModalDel}) => {\r\n\r\n  const [productId, setProductId] = useState('');\r\n\r\n  const btnCardHandler = (event) => {\r\n    event.stopPropagation();\r\n    setStateModal(true);\r\n    const currentID = event.target.closest('li').dataset.id;\r\n    setProductId(currentID);\r\n  }\r\n\r\n  const addToCart = () => {\r\n    setStateModal(false);\r\n    cart.push(productId);\r\n    setCart(cart);\r\n    localStorage.setItem('cart', JSON.stringify(cart));\r\n  };\r\n\r\n  const delCartHandler = (event) => {\r\n    event.stopPropagation();\r\n    setStateModalDel(true);\r\n    const currentID = event.target.closest('li').dataset.id;\r\n    setProductId(currentID);\r\n  };\r\n\r\n  const removeFromCard = () => {\r\n    setStateModalDel(false);\r\n    setCart(cart.filter(item => item !== productId));\r\n    localStorage.setItem('cart', JSON.stringify(cart.filter(item => item !== productId)));\r\n  }\r\n\r\n  const btnCard = {\r\n    text: \"Add to cart\",\r\n    onClick: btnCardHandler\r\n  };\r\n\r\n  const modalCard = {\r\n    header: \"Do you want to add a product to your cart?\",\r\n    text: \"After adding the desired products, go to the shopping cart to place an order.\",\r\n    closeButton: true,\r\n    closeModal: () => setStateModal(false),\r\n    actions:\r\n      <>\r\n        <Button text=\"Ok\" onClick={addToCart}/>\r\n        <Button text=\"Cancel\" onClick={() => setStateModal(false)}/>\r\n      </>\r\n  }\r\n\r\n  const modalCardDel = {\r\n    header: \"Want to remove from cart?\",\r\n    closeButton: true,\r\n    closeModal: () => setStateModalDel(false),\r\n    actions:\r\n      <>\r\n        <Button text=\"Ok\" onClick={removeFromCard}/>\r\n        <Button text=\"Cancel\" onClick={() => setStateModalDel(false)}/>\r\n      </>\r\n  }\r\n\r\n  const listItems = items.map((item) =>\r\n    <li key={item.id} data-id={item.id} className=\"product-list-item\">\r\n      <Product {...item} btnCard={btnCard} favorites={favorites} setFavorites={setFavorites} cart={cart}/>\r\n      {delBtnCart && <FontAwesomeIcon icon={faTimes} onClick={delCartHandler}/>}\r\n    </li>)\r\n\r\n  return (\r\n    <>\r\n      <ul className=\"product-list\">\r\n        {listItems}\r\n      </ul>\r\n      {stateModal && <Modal {...modalCard}/>}\r\n      {stateModalDel && <Modal {...modalCardDel}/>}\r\n\r\n    </>\r\n  )\r\n});\r\n\r\nProductList.protoTypes = {\r\n  items: PropTypes.array,\r\n  favorites: PropTypes.array,\r\n  setFavorites: PropTypes.func,\r\n  cart: PropTypes.array,\r\n  setCart: PropTypes.func,\r\n  delBtnCart: PropTypes.object,\r\n  stateModal: PropTypes.bool,\r\n  setStateModal: PropTypes.func,\r\n  stateModalDel: PropTypes.bool,\r\n  setStateModalDel: PropTypes.func\r\n};\r\n\r\nexport default ProductList","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\n\r\n\r\nexport const FormErrorsTab = ({ errors }) => {\r\n\r\n  const errorsList = Object.keys(errors).map(key => (\r\n    <div key={key}>{key}: {errors[key]}</div>\r\n  ));\r\n\r\n  const isVisible = !!errorsList.length;\r\n\r\n  return (\r\n    <ErrorMessage visible={isVisible}>\r\n      {errorsList}\r\n    </ErrorMessage>\r\n  )\r\n}\r\n\r\nconst ErrorMessage = styled.div`\r\n    padding: 10px;\r\n    background-color: red;\r\n    color: white;\r\n    text-align: center;\r\n    margin-top: 15px;\r\n\r\n    ${(props) => !props.visible && css`\r\n        background-color: transparent;\r\n    `}\r\n`","import * as Yup from 'yup';\r\nimport \"yup-phone\";\r\n\r\n\r\nexport const validationSchema = Yup.object().shape({\r\n  firstname: Yup.string()\r\n    .min(3, 'Слишком короткое имя!')\r\n    .max(15, 'Слишком длинное имя!')\r\n    .required('Заполните поле \"Имя\"'),\r\n  lastname: Yup.string()\r\n    .min(3, 'Слишком короткая запись')\r\n    .max(15, 'Слишком длинная запись')\r\n    .required('Заполните поле \"Фамилия\"'),\r\n  age: Yup.number()\r\n    .moreThan(20, 'Возраст должен быть больше 21 года')\r\n    .required('Заполните поле \"Возраст\"'),\r\n  deliveryAddress: Yup.string()\r\n    .min(5, 'Слишком короткая запись')\r\n    .max(30, 'Слишком длинная запись')\r\n    .required('Заполните поле \"Адрес доставки\"'),\r\n  phoneNumber: Yup.string()\r\n    .phone('UA', true, 'Номер телефона должен соответствовать региону UA')\r\n    .required('Заполните поле \"Телефон\"')\r\n});","const SET_FORM_VALUES = 'SET_FORM_VALUES';\r\n\r\nexport const MODULE_NAME = 'formValues';\r\nexport const selectFormValues = state => state[MODULE_NAME].values;\r\n\r\nconst initialState = {\r\n    values:{\r\n        firstname:\"\",\r\n        lastname:\"\",\r\n        age:\"\",\r\n        deliveryAddress:\"\",\r\n        phoneNumber:\"\"\r\n    }\r\n}\r\n\r\nexport function reducer(state = initialState, { type, payload }) {\r\n    switch(type) {\r\n        case SET_FORM_VALUES:\r\n            return{\r\n                ...state,\r\n                values: payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport const setFormValues = payload => ({\r\n    type: SET_FORM_VALUES,\r\n    payload\r\n})","import React from 'react';\r\nimport {Formik, Form, Field} from 'formik';\r\nimport styled from 'styled-components';\r\nimport {connect} from 'react-redux';\r\n\r\nimport {FormErrorsTab} from './formErrors';\r\nimport {validationSchema} from './validations';\r\nimport {deleteCart} from '../../store/productListReduser';\r\nimport {selectFormValues, setFormValues} from '../../store/formValues';\r\n\r\nconst mapStateToProps = state => ({\r\n  formValues: selectFormValues(state)\r\n})\r\n\r\nexport const FormCart = connect(mapStateToProps, {\r\n  deleteCart,\r\n  setFormValues\r\n})(({formValues, setFormValues, deleteCart}) => {\r\n\r\n  const initialValues = formValues\r\n\r\n  const onSubmit = (values, actions) => {\r\n    console.log('USER:', values);\r\n    actions.resetForm();\r\n    setFormValues({\r\n      firstname: \"\",\r\n      lastname: \"\",\r\n      age: \"\",\r\n      deliveryAddress: \"\",\r\n      phoneNumber: \"\"\r\n    });\r\n    deleteCart();\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <MyHeaderForm>Заполните пожалуйста форму</MyHeaderForm>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        onSubmit={onSubmit}\r\n        validationSchema={validationSchema}\r\n      >\r\n        {({values, errors, handleBlur}) => (\r\n          <MyForm onBlur={e => {\r\n            handleBlur(e);\r\n            setFormValues(values);\r\n          }}>\r\n            <MyField name='firstname'\r\n                     type='text'\r\n                     placeholder='Имя'/>\r\n            <MyField name='lastname'\r\n                     type='text'\r\n                     placeholder='Фамилия'/>\r\n            <MyField name='age'\r\n                     type='text'\r\n                     placeholder='Возраст'/>\r\n            <MyField name='deliveryAddress'\r\n                     type='text'\r\n                     placeholder='Адрес доставки'/>\r\n            <MyField name='phoneNumber'\r\n                     type='text'\r\n                     placeholder='Номер телефона'/>\r\n            <MyBtn type='submit'>ОТПРАВИТЬ</MyBtn>\r\n\r\n            <FormErrorsTab errors={errors}/>\r\n          </MyForm>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  )\r\n})\r\n\r\nconst MyForm = styled(Form)`\r\n    width: 30%;\r\n    margin: 10px auto;\r\n    padding: 6px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    border: 2px solid white;\r\n    border-radius: 4px;\r\n    background: chocolate;\r\n`\r\nexport const MyHeaderForm = styled.h2`\r\n    text-align: center;\r\n    font-family: sans-serif;\r\n    margin: 10px;\r\n    color: white;\r\n`\r\nexport const MyField = styled(Field)`\r\n    display: block;\r\n    width: 97.4%;\r\n    height: 25px;\r\n    margin-top: 5px;\r\n`\r\nexport const MyBtn = styled.button`\r\n    display: block;\r\n    width: 100%;\r\n    height: 30px;\r\n    margin-top: 10px;\r\n    font-size: 18px;\r\n`\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport ProductList from '../../components/ProductList/ProductList';\r\nimport {selectProductCart} from \"../../store/productListReduser\";\r\nimport {FormCart} from '../../components/FormCart';\r\n\r\nconst mapStoreToProps = state => ({\r\n  cart: selectProductCart(state)\r\n});\r\n\r\nexport const Cart = connect(mapStoreToProps, null)(({listItems, cart}) => {\r\n  const listItemsInCart = listItems.filter(({id}) => cart.includes(id));\r\n\r\n  return (\r\n    <>\r\n      <ProductList items={listItemsInCart} cart={cart} delBtnCart/>\r\n      {cart.length > 0 && <FormCart/>}\r\n    </>\r\n  );\r\n})\r\n\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport ProductList from \"../../components/ProductList/ProductList\";\r\nimport {selectProductFavorites} from \"../../store/productListReduser\";\r\n\r\nconst mapStateToProps = state => ({\r\n  favorites: selectProductFavorites(state)\r\n})\r\n\r\nexport const Favorites = connect(mapStateToProps, null)(({listItems, favorites}) => {\r\n  const listItemsInFavorite = listItems.filter(({id}) => favorites.includes(id));\r\n\r\n  return (\r\n    <ProductList items={listItemsInFavorite} favorites={favorites}/>\r\n  );\r\n});\r\n\r\n","import React from 'react';\r\nimport ProductList from '../../components/ProductList/ProductList';\r\n\r\n\r\nexport function Home({ listItems }) {\r\n    \r\n  return (        \r\n      <ProductList items={ listItems } />\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './header.scss';\r\n\r\nexport const Header = () => {\r\n    return(\r\n        <header className=\"header\">\r\n          <NavLink to=\"/\">\r\n              Home\r\n            </NavLink>\r\n          <NavLink to=\"/favorites\">\r\n            Favorites\r\n          </NavLink>\r\n          <NavLink to=\"/cart\">\r\n              Cart\r\n            </NavLink>\r\n        </header>\r\n    )\r\n}\r\n\r\n","import React, { useEffect } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux'\r\nimport { Home, Favorites, Cart } from './pages';\r\nimport { Header } from './commons/Header';\r\nimport {getProducts, selectProductList} from \"./store/productListReduser\";\r\n\r\nconst mapStateToProps = state => ({\r\n  products:selectProductList(state)\r\n})\r\n\r\nconst App = connect(mapStateToProps, { getProducts })(({products, getProducts})=> {\r\n\r\n  useEffect(()=>{\r\n    getProducts()\r\n  },[getProducts])\r\n\r\n\r\n  return (\r\n    <Router>\r\n      <Header/>\r\n      <Switch>\r\n        <Route path=\"/\" exact>\r\n          <Home listItems={ products }/>\r\n        </Route>\r\n        <Route path=\"/favorites\">\r\n          <Favorites listItems={ products }/>\r\n        </Route>\r\n        <Route path=\"/cart\">\r\n          <Cart listItems={ products }/>\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n\r\n  );\r\n});\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import {createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\n\r\nimport {reducer as productReducer, MODULE_NAME as productsModuleName} from './productListReduser';\r\nimport {reducer as emergeReducer, MODULE_NAME as emergeModuleName} from './emergeReduser';\r\nimport {reducer as formReducer, MODULE_NAME as formModuleName} from './formValues';\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n  [productsModuleName]: productReducer,\r\n  [emergeModuleName]: emergeReducer,\r\n  [formModuleName]: formReducer,\r\n});\r\n\r\nexport const store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Provider} from 'react-redux';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {store} from './store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App/>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}